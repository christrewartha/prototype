#include <stdio.h>
#include <gl2d.h>
#include <ctime>
#include <stdlib.h>
#include <nds.h>
#include "Character.h"
#include "Door.h"
#include "Game.h"
#include "GLFont.h" // Include the new Font class
#include "GLFontManager.h" // Include the GLFontManager class


#include "clienttest16.h"
glImage  Client[1];


// Ensure that all includes are above the class definition
class App {
public:
    App() 
	{}

    void init() {
        // Initialize the DS
        videoSetMode(MODE_5_3D);
        glScreen2D();

        // Set up enough texture memory for our textures
        // Bank A is just 128kb and we are using 194 kb of
        // sprites
        vramSetBankA( VRAM_A_TEXTURE );
        vramSetBankB( VRAM_B_TEXTURE );
	    vramSetBankF(VRAM_F_TEX_PALETTE);  // Allocate VRAM bank for all the palettes
    	vramSetBankE(VRAM_E_MAIN_BG);	

        // Initialize the font manager
        GLFontManager::getInstance().init();

        // Initialize the game
        game.init();

/*
        int ClientTextureID =
		glLoadTileSet( Client,			// pointer to glImage array
					   32,				// sprite width
					   32,				// sprite height
					   32,				// bitmap image width
					   32,				// bitmap image height
					   GL_RGB16,		// texture type for glTexImage2D() in videoGL.h
					   TEXTURE_SIZE_32,	// sizeX for glTexImage2D() in videoGL.h
					   TEXTURE_SIZE_32,	// sizeY for glTexImage2D() in videoGL.h
					   TEXGEN_OFF,
					   0,					// Length of the palette to use (16 colors)
					   0,		// Load our 256 color tiles palette
					   (u8*)clienttest16Bitmap // image data generated by GRIT
					 );
*/
    }

    void run() {
        int frame = 0;

        srand(time(NULL));

		bool running = true;
        while (running) {
            frame++;

            scanKeys();
			ProcessTouchInput();

			if(keysDown() & KEY_TOUCH) {	
				game.handleShot(touchX, touchY);
			}
			game.update();

            glBegin2D();

			game.display();

			glBoxFilled(touchX - 2, 
						touchY - 2, 
						touchX + 2, 
						touchY + 2, 
						RGB15(255, 255, 0));

            // Use GLFontManager to render text
            //GLFontManager::getInstance().renderTextCentered(0, 100, "FONTS BY ADIGUN A. POLACK");
            //GLFontManager::getInstance().renderTextCentered(0, 120, "CODE BY RELMINATOR");

            //glColor( RGB15(31,0,31) );
            //glSprite( 100, 100, GL_FLIP_NONE, Client );

            glEnd2D();

			
            if(keysDown() & KEY_START)
            {
				running = false;
            }
            glFlush(0);
            swiWaitForVBlank();
        }
    }

    void cleanup() {
    }

private:

	Game game;

	int touchX = 0;
	int touchY = 0;

	void ProcessTouchInput() {

		touchPosition touchXY;

		if( touchRead(&touchXY) ) 
		{
			if(touchXY.px > 0 && touchXY.py > 0) 
			{
				touchX = touchXY.px;
				touchY = touchXY.py;
			}
		}
	}
};

int main() {
    App app; // Create an instance of App
    app.init(); // Initialize the app
    app.run(); // Run the main loop
    app.cleanup(); // Clean up resources
    return 0;
}
